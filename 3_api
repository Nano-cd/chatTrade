    def execute_okx_trade(api_key, secret_key, passphrase, symbol, signals):
        """
        执行OKX交易
        :param api_key: OKX API密钥
        :param secret_key: OKX Secret密钥
        :param passphrase: API密码
        :param symbol: 交易对,如'BTC-USDT'
        :param signals: 交易信号列表
        """
        try:
            import ccxt
            
            # 初始化OKX交易所接口
            exchange = ccxt.okx({
                'apiKey': api_key,
                'secret': secret_key,
                'password': passphrase,
                'enableRateLimit': True
            })
            
            print("成功连接到OKX交易所")
            
            # 获取账户余额
            balance = exchange.fetch_balance()
            usdt_balance = balance['USDT']['free']
            print(f'当前USDT余额: {usdt_balance}')
            
            # 获取当前市场价格
            ticker = exchange.fetch_ticker(symbol)
            current_price = ticker['last']
            
            # 设置每次交易额度（这里假设使用20%的USDT余额）
            trade_amount = usdt_balance * 0.2 / current_price
            
            # 执行交易
            for signal in signals:
                if signal > 0:  # 买入信号
                    try:
                        order = exchange.create_market_buy_order(
                            symbol,
                            trade_amount
                        )
                        print(f"执行买入订单: {order}")
                    except Exception as e:
                        print(f"买入订单执行失败: {str(e)}")
                        
                elif signal < 0:  # 卖出信号
                    try:
                        order = exchange.create_market_sell_order(
                            symbol,
                            trade_amount
                        )
                        print(f"执行卖出订单: {order}")
                    except Exception as e:
                        print(f"卖出订单执行失败: {str(e)}")
                        
                # 等待一段时间避免触发频率限制
                import time
                time.sleep(1)
                
        except Exception as e:
            print(f"交易执行过程中出现错误: {str(e)}")

    # 使用示例
    if __name__ == "__main__":
        # 设置您的API密钥（请替换为实际的密钥）
        api_key = "your_api_key"
        secret_key = "your_secret_key"
        passphrase = "your_passphrase"
        symbol = "BTC-USDT"
        
        # 运行主程序获取交易信号
        main()
        
        # 执行实际交易
        execute_okx_trade(api_key, secret_key, passphrase, symbol, signals)
